<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>NEXT</title>
    <url>/2021/06/20/NEXT/</url>
    <content><![CDATA[<p>NEXT 配置修改</p>
<span id="more"></span>
<p>参考地址<br><a href="http://theme-next.iissnan.com/theme-settings.html#rss">http://theme-next.iissnan.com/theme-settings.html#rss</a></p>
<h1 id="1-Next主题风格"><a href="#1-Next主题风格" class="headerlink" title="1.Next主题风格"></a>1.Next主题风格</h1><p>Next提供了四中主题风格scheme，可以在主题配置文件_config.yml文件中进行选择</p>
<p>分别是Muse、Mist、Pisces、Gemini</p>
<p>默认时Muse主题，我用的是Gemini主题，所以把Muse注释掉，Gemini去掉注释</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Schemes</span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Muse</span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Mist</span></span><br><span class="line"><span class="meta">#</span><span class="bash">scheme: Pisces</span></span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>



<h1 id="2-设置菜单栏"><a href="#2-设置菜单栏" class="headerlink" title="2.设置菜单栏"></a>2.设置菜单栏</h1><h2 id="取消菜单栏注释"><a href="#取消菜单栏注释" class="headerlink" title="取消菜单栏注释"></a>取消菜单栏注释</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: / || fa fa-home</span><br><span class="line">  about: /about/ || fa fa-user</span><br><span class="line">  tags: /tags/ || fa fa-tags</span><br><span class="line">  categories: /categories/ || fa fa-th</span><br><span class="line">  archives: /archives/ || fa fa-archive</span><br><span class="line"><span class="meta">  #</span><span class="bash">schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">commonweal: /404/ || fa fa-heartbeat</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<p><strong>在终端窗口下，定位到 Hexo 站点目录下。使用 hexo new page 新建一个页面，命名为 tags ：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd \hexoblog\maybe</span><br><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>



<p><strong>编辑刚新建的页面，将页面的类型设置为 tags ，主题将自动为这个页面显示标签云。页面内容如下：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2021-06-19 14:42:32</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">---</span><br></pre></td></tr></table></figure>



<p>*<em><strong>注意：</strong>如果有集成评论服务，页面也会带有评论。 若需要关闭的话，请添加字段 <code>comments</code> 并将值设置为 <code>false</code>，如：</em>*</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2021-06-19 14:42:32</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>



<h1 id="3-头像修改"><a href="#3-头像修改" class="headerlink" title="3.头像修改"></a>3.头像修改</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">avatar:</span><br><span class="line">  url: /images/avatar.png</span><br></pre></td></tr></table></figure>



<h1 id="4-动态背景"><a href="#4-动态背景" class="headerlink" title="4.动态背景"></a>4.动态背景</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">canvas_ribbon:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>



<h1 id="5-添加顶部加载条"><a href="#5-添加顶部加载条" class="headerlink" title="5.添加顶部加载条"></a>5.添加顶部加载条</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nprogress:</span><br><span class="line">  enable: true</span><br><span class="line">  spinner: true</span><br></pre></td></tr></table></figure>





<h1 id="6-为博客加上萌萌的宠物"><a href="#6-为博客加上萌萌的宠物" class="headerlink" title="6.为博客加上萌萌的宠物"></a>6.为博客加上萌萌的宠物</h1><p><strong>在终端切换到你的博客的路径里，然后输入如下代码：</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure>



<h1 id="7-添加搜索功能"><a href="#7-添加搜索功能" class="headerlink" title="7.添加搜索功能"></a>7.添加搜索功能</h1><p><strong>1、安装 hexo-generator-searchdb 插件</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>
<p><strong>2、打开 主题配置文件 找到Local search，将enable设置为true</strong></p>
<h1 id="8-开启代码复制"><a href="#8-开启代码复制" class="headerlink" title="8.开启代码复制"></a>8.开启代码复制</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">codeblock:</span><br><span class="line">  copy_button:</span><br><span class="line">    enable: true</span><br></pre></td></tr></table></figure>



<h1 id="9-设置已读进度条"><a href="#9-设置已读进度条" class="headerlink" title="9.设置已读进度条"></a>9.设置已读进度条</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Reading progress bar</span></span><br><span class="line">reading_progress:</span><br><span class="line">  enable: true</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: left | right</span></span><br><span class="line">  startAt: left</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Available values: top | bottom</span></span><br><span class="line">  position: top</span><br><span class="line">  reversed: false</span><br><span class="line">  color: &quot;#37c6c0&quot;</span><br><span class="line">  height: 3px</span><br></pre></td></tr></table></figure>



<h1 id="10-打赏设置"><a href="#10-打赏设置" class="headerlink" title="10.打赏设置"></a>10.打赏设置</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">reward_settings:</span><br><span class="line"><span class="meta">  #</span><span class="bash"> If <span class="literal">true</span>, a donate button will be displayed <span class="keyword">in</span> every article by default.</span></span><br><span class="line">  enable: true</span><br><span class="line">  animation: true</span><br><span class="line">  comment: 请作者喝杯茶吧</span><br><span class="line"><span class="meta">  #</span><span class="bash">comment: Buy me a coffee</span></span><br><span class="line"></span><br><span class="line">reward:</span><br><span class="line">  wechatpay: /images/wechatpay.png</span><br><span class="line"><span class="meta">  #</span><span class="bash">alipay: /images/alipay.png</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">paypal: /images/paypal.png</span></span><br><span class="line"><span class="meta">  #</span><span class="bash">bitcoin: /images/bitcoin.png</span></span><br><span class="line"> </span><br><span class="line">自己获取自己的支付收款码，放置在next/source/images中</span><br></pre></td></tr></table></figure>



<h1 id="11-自定义博客图标"><a href="#11-自定义博客图标" class="headerlink" title="11.自定义博客图标"></a>11.自定义博客图标</h1><p><strong>博客网站的图标可以在iconfont等网站选择和制作图标</strong></p>
<p><strong>文件路径：\themes\next\source，images修改主题images下文件替换</strong></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">favicon:</span><br><span class="line">  small: /images/favicon-16x16-next.png</span><br><span class="line">  medium: /images/favicon-32x32-next.png</span><br><span class="line">  apple_touch_icon: /images/apple-touch-icon-next.png</span><br><span class="line">  safari_pinned_tab: /images/logo.svg</span><br><span class="line"><span class="meta">  #</span><span class="bash">android_manifest: /manifest.json</span></span><br></pre></td></tr></table></figure>



<h1 id="12-开启站点阅读时间"><a href="#12-开启站点阅读时间" class="headerlink" title="12.开启站点阅读时间"></a>12.开启站点阅读时间</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">npm</span> <span class="string">install</span> <span class="string">hexo-word-counter</span></span><br><span class="line"><span class="string">hexo</span> <span class="string">clean</span></span><br><span class="line"></span><br><span class="line"><span class="attr">symbols_count_time:</span></span><br><span class="line">  <span class="attr">separated_meta:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">item_text_total:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h2 id="12-1-页面阅读统计-不蒜子统计"><a href="#12-1-页面阅读统计-不蒜子统计" class="headerlink" title="12.1 页面阅读统计 不蒜子统计"></a>12.1 页面阅读统计 不蒜子统计</h2><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span>              	   <span class="comment"># 设true 开启</span></span><br><span class="line">  <span class="attr">total_visitors:</span> <span class="literal">true</span>      	   <span class="comment"># 总阅读人数（uv数）</span></span><br><span class="line">  <span class="attr">total_visitors_icon:</span> <span class="string">fa</span> <span class="string">fa-user</span>  <span class="comment"># 阅读总人数的图标</span></span><br><span class="line">  <span class="attr">total_views:</span> <span class="literal">true</span>         	   <span class="comment"># 总阅读次数（pv数）</span></span><br><span class="line">  <span class="attr">total_views_icon:</span> <span class="string">fa</span> <span class="string">fa-eye</span>      <span class="comment"># 阅读总次数的图标</span></span><br><span class="line">  <span class="attr">post_views:</span> <span class="literal">true</span>         		   <span class="comment"># 开启内容阅读次数</span></span><br><span class="line">  <span class="attr">post_views_icon:</span> <span class="string">far</span> <span class="string">fa-eye</span>      <span class="comment"># 内容页阅读数的图标</span></span><br></pre></td></tr></table></figure>



<h1 id="13-文章原创声明"><a href="#13-文章原创声明" class="headerlink" title="13.文章原创声明"></a>13.文章原创声明</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Creative Commons 4.0 International License.</span></span><br><span class="line"><span class="comment"># See: https://creativecommons.org/about/cclicenses/</span></span><br><span class="line"><span class="attr">creative_commons:</span></span><br><span class="line">  <span class="comment"># Available values: by | by-nc | by-nc-nd | by-nc-sa | by-nd | by-sa | cc-zero</span></span><br><span class="line">  <span class="attr">license:</span> <span class="string">by-nc-sa</span></span><br><span class="line">  <span class="comment"># Available values: big | small</span></span><br><span class="line">  <span class="attr">size:</span> <span class="string">small</span></span><br><span class="line">  <span class="attr">sidebar:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">post:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># You can set a language value if you prefer a translated version of CC license, e.g. deed.zh</span></span><br><span class="line">  <span class="comment"># CC licenses are available in 39 languages, you can find the specific and correct abbreviation you need on https://creativecommons.org</span></span><br><span class="line">  <span class="attr">language:</span></span><br></pre></td></tr></table></figure>





<h1 id="14-修改底部标签样式"><a href="#14-修改底部标签样式" class="headerlink" title="14.修改底部标签样式"></a>14.修改底部标签样式</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Use icon instead of the symbol # to indicate the tag at the bottom of the post</span></span><br><span class="line"><span class="attr">tag_icon:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>



<h1 id="15-显示当然浏览进度"><a href="#15-显示当然浏览进度" class="headerlink" title="15.显示当然浏览进度"></a>15.显示当然浏览进度</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">back2top:</span><br><span class="line">  enable: true							</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Back to top <span class="keyword">in</span> sidebar.</span></span><br><span class="line">  sidebar: false</span><br><span class="line"><span class="meta">  #</span><span class="bash"> Scroll percent label <span class="keyword">in</span> b2t button.</span></span><br><span class="line">  scrollpercent: true					</span><br></pre></td></tr></table></figure>



<h1 id="16-鼠标点击特效"><a href="#16-鼠标点击特效" class="headerlink" title="16.鼠标点击特效"></a>16.鼠标点击特效</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">npm install next-theme/hexo-next-fireworks</span><br></pre></td></tr></table></figure>



<h1 id="17-GitHub-Fork-Me"><a href="#17-GitHub-Fork-Me" class="headerlink" title="17.GitHub Fork Me"></a>17.GitHub Fork Me</h1><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># `Follow me on GitHub` banner in the top-right corner.</span></span><br><span class="line"><span class="attr">github_banner:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">permalink:</span> <span class="string">https://github.com/maybeYo</span></span><br><span class="line">  <span class="attr">title:</span> <span class="string">Follow</span> <span class="string">me</span> <span class="string">on</span> <span class="string">GitHub</span></span><br></pre></td></tr></table></figure>



<h1 id="18-bookmark"><a href="#18-bookmark" class="headerlink" title="18.bookmark"></a>18.bookmark</h1><p>Bookmark是一个插件，允许用户保存他们的阅读进度。用户只需单击页面左上角的书签图标即可保存滚动位置。当他们下次访问您的博客时，他们可以自动恢复每个页面的最后滚动位置。</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Bookmark Support</span></span><br><span class="line"><span class="attr">bookmark:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Customize the color of the bookmark.</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;#222&quot;</span></span><br><span class="line">  <span class="comment"># If auto, save the reading progress when closing the page or clicking the bookmark-icon.</span></span><br><span class="line">  <span class="comment"># If manual, only save it by clicking the bookmark-icon.</span></span><br><span class="line">  <span class="attr">save:</span> <span class="string">auto</span></span><br></pre></td></tr></table></figure>



<h1 id="19-添加lazyload"><a href="#19-添加lazyload" class="headerlink" title="19.添加lazyload"></a>19.添加lazyload</h1><p>对于图片进行延迟加载，访问到图片位置时才去请求图片资源，这样可以提高博客的访问速度，节省流量。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/theme-next/theme-next-jquery-lazyload source/lib/jquery_laz</span><br></pre></td></tr></table></figure>



<p>主题配置文件:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Vanilla JavaScript plugin for lazyloading images.</span></span><br><span class="line"><span class="comment"># For more information: https://apoorv.pro/lozad.js/demo/</span></span><br><span class="line"><span class="attr">lazyload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>



<h1 id="20-主题及标题栏背景图"><a href="#20-主题及标题栏背景图" class="headerlink" title="20.主题及标题栏背景图"></a>20.主题及标题栏背景图</h1><blockquote>
<p>首先主题配置文件取消注释</p>
</blockquote>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>在路径~/hexo_blog/source/_data创建/修改 styles.styl文件，并添加以下内容</p>
</blockquote>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">// 添加背景图片</span><br><span class="line">body &#123;</span><br><span class="line">      background: url(https://source.unsplash.com/random/1600x900?wallpapers);//自己喜欢的图片地址</span><br><span class="line">      background-size: cover;</span><br><span class="line">      background-repeat: no-repeat;</span><br><span class="line">      background-attachment: fixed;</span><br><span class="line">      background-position: 50% 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// 标题栏背景</span><br><span class="line">.site-meta &#123;</span><br><span class="line">    padding: 20px 0;</span><br><span class="line">    color: #fff;</span><br><span class="line">    background: $blue;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-attachment:fixed;</span><br><span class="line">    background-position:center;</span><br><span class="line">    background-size:cover;</span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line">// 修改主体透明度</span><br><span class="line">.main-inner&#123;</span><br><span class="line">    background: #fff;</span><br><span class="line">    opacity: 0.95;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改菜单栏透明度，会引起本地搜索菜单bug</span><br><span class="line">//.header-inner &#123;</span><br><span class="line">//    opacity: 0.95;</span><br><span class="line">//&#125;</span><br><span class="line"></span><br><span class="line">// 主页文章添加阴影效果</span><br><span class="line">.post &#123;</span><br><span class="line">   margin-top: 60px;</span><br><span class="line">   margin-bottom: 60px;</span><br><span class="line">   padding: 25px;</span><br><span class="line">   -webkit-box-shadow: 0 0 5px rgba(202, 203, 203, .5);</span><br><span class="line">   -moz-box-shadow: 0 0 5px rgba(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h1 id="21-主题及标题栏背景图"><a href="#21-主题及标题栏背景图" class="headerlink" title="21.主题及标题栏背景图"></a>21.主题及标题栏背景图</h1><p>首先主题配置文件取消注释</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">custom_file_path:</span></span><br><span class="line">  <span class="attr">style:</span> <span class="string">source/_data/styles.styl</span></span><br></pre></td></tr></table></figure>



<p>在路径~/hexo_blog/source/_data创建/修改 styles.styl文件，并添加以下内容</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">添加背景图片</span></span><br><span class="line"><span class="string">body</span> &#123;</span><br><span class="line">      <span class="attr">background:</span> <span class="string">url(https://source.unsplash.com/random/1600x900?wallpapers);//自己喜欢的图片地址</span></span><br><span class="line">      <span class="attr">background-size:</span> <span class="string">cover;</span></span><br><span class="line">      <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span></span><br><span class="line">      <span class="attr">background-attachment:</span> <span class="string">fixed;</span></span><br><span class="line">      <span class="attr">background-position:</span> <span class="number">50</span><span class="string">%</span> <span class="number">50</span><span class="string">%;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">标题栏背景</span></span><br><span class="line"><span class="string">.site-meta</span> &#123;</span><br><span class="line">    <span class="attr">padding:</span> <span class="string">20px</span> <span class="number">0</span><span class="string">;</span></span><br><span class="line">    <span class="attr">color:</span> <span class="comment">#fff;</span></span><br><span class="line">    <span class="attr">background:</span> <span class="string">$blue;</span></span><br><span class="line">    <span class="attr">background-repeat:</span> <span class="literal">no</span><span class="string">-repeat;</span></span><br><span class="line">    <span class="string">background-attachment:fixed;</span></span><br><span class="line">    <span class="string">background-position:center;</span></span><br><span class="line">    <span class="string">background-size:cover;</span></span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">修改主体透明度</span></span><br><span class="line"><span class="string">.main-inner&#123;</span></span><br><span class="line">    <span class="attr">background:</span> <span class="comment">#fff;</span></span><br><span class="line">    <span class="attr">opacity:</span> <span class="number">0.95</span><span class="string">;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">修改菜单栏透明度，会引起本地搜索菜单bug</span></span><br><span class="line"><span class="string">//.header-inner</span> &#123;</span><br><span class="line"><span class="string">//</span>    <span class="attr">opacity:</span> <span class="number">0.95</span><span class="string">;</span></span><br><span class="line"><span class="string">//</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">主页文章添加阴影效果</span></span><br><span class="line"><span class="string">.post</span> &#123;</span><br><span class="line">   <span class="attr">margin-top:</span> <span class="string">60px;</span></span><br><span class="line">   <span class="attr">margin-bottom:</span> <span class="string">60px;</span></span><br><span class="line">   <span class="attr">padding:</span> <span class="string">25px;</span></span><br><span class="line">   <span class="string">-webkit-box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">rgba(202</span>, <span class="number">203</span>, <span class="number">203</span>, <span class="number">.5</span><span class="string">);</span></span><br><span class="line">   <span class="string">-moz-box-shadow:</span> <span class="number">0</span> <span class="number">0</span> <span class="string">5px</span> <span class="string">rgba(202</span>, <span class="number">203</span>, <span class="number">204</span>, <span class="number">.5</span><span class="string">);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2021/06/19/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<span id="more"></span>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>kubeadm部署k8s</title>
    <url>/2021/06/20/kubeadm%E9%83%A8%E7%BD%B2k8s/</url>
    <content><![CDATA[<p>kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。</p>
<span id="more"></span>
<p>这个工具能通过两条指令完成一个kubernetes集群的部署：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个 Master 节点</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubeadm init</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将一个 Node 节点加入到当前集群中</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubeadm join &lt;Master节点的IP和端口 &gt;</span></span><br></pre></td></tr></table></figure>

<h2 id="1-安装要求"><a href="#1-安装要求" class="headerlink" title="1. 安装要求"></a>1. 安装要求</h2><p>在开始之前，部署Kubernetes集群机器需要满足以下几个条件：</p>
<ul>
<li>一台或多台机器，操作系统 CentOS7.x-86_x64</li>
<li>硬件配置：2GB或更多RAM，2个CPU或更多CPU，硬盘30GB或更多</li>
<li>集群中所有机器之间网络互通</li>
<li>可以访问外网，需要拉取镜像</li>
<li>禁止swap分区</li>
</ul>
<h2 id="2-准备环境"><a href="#2-准备环境" class="headerlink" title="2. 准备环境"></a>2. 准备环境</h2><table>
<thead>
<tr>
<th>角色</th>
<th>IP</th>
</tr>
</thead>
<tbody><tr>
<td>k8s-master</td>
<td>192.168.81.57</td>
</tr>
<tr>
<td>k8s-node1</td>
<td>192.168.81.58</td>
</tr>
<tr>
<td>k8s-node2</td>
<td>192.168.81.59</td>
</tr>
</tbody></table>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙：</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭selinux：</span></span><br><span class="line">sed -i &#x27;s/enforcing/disabled/&#x27; /etc/selinux/config  # 永久</span><br><span class="line">setenforce 0  # 临时</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭swap：</span></span><br><span class="line">swapoff -a  # 临时</span><br><span class="line">vim /etc/fstab  # 永久</span><br><span class="line">swapoff /dev/mapper/centos-swap</span><br><span class="line">free -h</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置主机名：</span></span><br><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在master添加hosts：</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.81.57 k8s-master</span><br><span class="line">192.168.81.58 k8s-node1</span><br><span class="line">192.168.81.59 k8s-node2</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将桥接的IPv4流量传递到iptables的链：</span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system  # 生效</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 时间同步：</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure>

<h2 id="3-安装Docker-kubeadm-kubelet【所有节点】"><a href="#3-安装Docker-kubeadm-kubelet【所有节点】" class="headerlink" title="3. 安装Docker/kubeadm/kubelet【所有节点】"></a>3. 安装Docker/kubeadm/kubelet【所有节点】</h2><p>Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。</p>
<h3 id="3-1-安装Docker"><a href="#3-1-安装Docker" class="headerlink" title="3.1 安装Docker"></a>3.1 安装Docker</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wget http://mirrors.aliyun.com/repo/Centos-7.repo</span><br><span class="line">wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span><br><span class="line">yum -y install docker-ce</span><br><span class="line">systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看docker版本</span></span><br><span class="line">[root@localhost ~]<span class="comment"># docker version</span></span><br><span class="line">Client: Docker Engine - Community</span><br><span class="line"> Version:           20.10.5</span><br><span class="line"> API version:       1.41</span><br><span class="line"> Go version:        go1.13.15</span><br><span class="line"> Git commit:        55c4c88</span><br><span class="line"> Built:             Tue Mar  2 20:33:55 2021</span><br><span class="line"> OS/Arch:           linux/amd64</span><br><span class="line"> Context:           default</span><br><span class="line"> Experimental:      <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">Server: Docker Engine - Community</span><br><span class="line"> Engine:</span><br><span class="line">  Version:          20.10.5</span><br><span class="line">  API version:      1.41 (minimum version 1.12)</span><br><span class="line">  Go version:       go1.13.15</span><br><span class="line">  Git commit:       363e9a8</span><br><span class="line">  Built:            Tue Mar  2 20:32:17 2021</span><br><span class="line">  OS/Arch:          linux/amd64</span><br><span class="line">  Experimental:     <span class="literal">false</span></span><br><span class="line"> containerd:</span><br><span class="line">  Version:          1.4.4</span><br><span class="line">  GitCommit:        05f951a3781f4f2c1911b05e61c160e9c30eaa8e</span><br><span class="line"> runc:</span><br><span class="line">  Version:          1.0.0-rc93</span><br><span class="line">  GitCommit:        12644e614e25b05da6fd08a38ffa0cfe1903fdec</span><br><span class="line"> docker-init:</span><br><span class="line">  Version:          0.19.0</span><br><span class="line">  GitCommit:        de40ad0</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>配置镜像下载加速器：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">systemctl restart docker</span><br><span class="line">docker info</span><br></pre></td></tr></table></figure>

<h3 id="3-2-添加阿里云YUM软件源"><a href="#3-2-添加阿里云YUM软件源" class="headerlink" title="3.2 添加阿里云YUM软件源"></a>3.2 添加阿里云YUM软件源</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="3-2-1-常用管理命令"><a href="#3-2-1-常用管理命令" class="headerlink" title="3.2.1 常用管理命令"></a>3.2.1 常用管理命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 命令格式：docker image COMMAND</span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 指令 描述</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ls			//列出镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> build			//构建镜像来自Dockerfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">history</span>		//查看镜像历史</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> inspect		//显示一个或多个镜像详细信息</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> pull			//从镜像仓库拉取镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> push			//推送一个镜像到镜像仓库</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> rm			//移除一个或多个镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> prune			//移除没有被标记或者没有被任何容器引用的镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tag			//创建一个引用源镜像标记目标镜像</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> save			//保存一个或多个镜像到一个tar归档文件</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> load			//加载镜像来自tar归档或标准输入</span></span><br></pre></td></tr></table></figure>

<blockquote>
<p>docker save load使用</p>
</blockquote>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 将有网络的镜像打包为tar文件 81.57操作</span></span><br><span class="line">[root@localhost ~]# docker save nginx -o nginx.tar</span><br><span class="line">[root@localhost ~]# ls</span><br><span class="line">anaconda-ks.cfg  nginx.tar</span><br><span class="line">[root@localhost ~]# du -sh nginx.tar </span><br><span class="line">131M	nginx.tar</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看tar包内容</span></span><br><span class="line">[root@localhost ~]# tar tvf nginx.tar </span><br><span class="line">-rw-r--r-- 0/0            7731 2021-03-11 08:21 018aec2b4f302b08b4c7274b72bede1fe56ee1f2bcaa06492e3f464e05f1a9a8.json</span><br><span class="line">drwxr-xr-x 0/0               0 2021-03-11 08:21 1f1a90348f908c579d0340f4bac7680918de1fa2f4c4fd2c2145a663d6178064/</span><br><span class="line">-rw-r--r-- 0/0               3 2021-03-11 08:21 1f1a90348f908c579d0340f4bac7680918de1fa2f4c4fd2c2145a663d6178064/VERSION</span><br><span class="line">-rw-r--r-- 0/0             482 2021-03-11 08:21 1f1a90348f908c579d0340f4bac7680918de1fa2f4c4fd2c2145a663d6178064/json</span><br><span class="line">-rw-r--r-- 0/0            4096 2021-03-11 08:21 1f1a90348f908c579d0340f4bac7680918de1fa2f4c4fd2c2145a663d6178064/layer.tar</span><br><span class="line">drwxr-xr-x 0/0               0 2021-03-11 08:21 3ed7719d733be9ef3895d3b6435ba67c07087b06aaef54a4d63ea59ca1ca5c32/</span><br><span class="line">-rw-r--r-- 0/0               3 2021-03-11 08:21 3ed7719d733be9ef3895d3b6435ba67c07087b06aaef54a4d63ea59ca1ca5c32/VERSION</span><br><span class="line">-rw-r--r-- 0/0            1682 2021-03-11 08:21 3ed7719d733be9ef3895d3b6435ba67c07087b06aaef54a4d63ea59ca1ca5c32/json</span><br><span class="line">-rw-r--r-- 0/0            7168 2021-03-11 08:21 3ed7719d733be9ef3895d3b6435ba67c07087b06aaef54a4d63ea59ca1ca5c32/layer.tar</span><br><span class="line">drwxr-xr-x 0/0               0 2021-03-11 08:21 4fc81aabdfa5c3ae98c390eccf8414520a26d6c3aa8974d5fccccf61d889aa04/</span><br><span class="line">-rw-r--r-- 0/0               3 2021-03-11 08:21 4fc81aabdfa5c3ae98c390eccf8414520a26d6c3aa8974d5fccccf61d889aa04/VERSION</span><br><span class="line">-rw-r--r-- 0/0             482 2021-03-11 08:21 4fc81aabdfa5c3ae98c390eccf8414520a26d6c3aa8974d5fccccf61d889aa04/json</span><br><span class="line">-rw-r--r-- 0/0            3584 2021-03-11 08:21 4fc81aabdfa5c3ae98c390eccf8414520a26d6c3aa8974d5fccccf61d889aa04/layer.tar</span><br><span class="line">drwxr-xr-x 0/0               0 2021-03-11 08:21 7822202c2b2274fafc6cf0d948baca257fe26ccb6858084a19ec635e81b210f3/</span><br><span class="line">-rw-r--r-- 0/0               3 2021-03-11 08:21 7822202c2b2274fafc6cf0d948baca257fe26ccb6858084a19ec635e81b210f3/VERSION</span><br><span class="line">-rw-r--r-- 0/0             482 2021-03-11 08:21 7822202c2b2274fafc6cf0d948baca257fe26ccb6858084a19ec635e81b210f3/json</span><br><span class="line">-rw-r--r-- 0/0            3072 2021-03-11 08:21 7822202c2b2274fafc6cf0d948baca257fe26ccb6858084a19ec635e81b210f3/layer.tar</span><br><span class="line">drwxr-xr-x 0/0               0 2021-03-11 08:21 8b9e24c9de24a93a1a2da83ab6830ba2ac2914fb5c3af42bc3a8c198640e1299/</span><br><span class="line">-rw-r--r-- 0/0               3 2021-03-11 08:21 8b9e24c9de24a93a1a2da83ab6830ba2ac2914fb5c3af42bc3a8c198640e1299/VERSION</span><br><span class="line">-rw-r--r-- 0/0             482 2021-03-11 08:21 8b9e24c9de24a93a1a2da83ab6830ba2ac2914fb5c3af42bc3a8c198640e1299/json</span><br><span class="line">-rw-r--r-- 0/0        64807936 2021-03-11 08:21 8b9e24c9de24a93a1a2da83ab6830ba2ac2914fb5c3af42bc3a8c198640e1299/layer.tar</span><br><span class="line">drwxr-xr-x 0/0               0 2021-03-11 08:21 e86c0242e63168af8ce7e8640b4f884c500a003fed9ccfedd98f682c5026daf4/</span><br><span class="line">-rw-r--r-- 0/0               3 2021-03-11 08:21 e86c0242e63168af8ce7e8640b4f884c500a003fed9ccfedd98f682c5026daf4/VERSION</span><br><span class="line">-rw-r--r-- 0/0             406 2021-03-11 08:21 e86c0242e63168af8ce7e8640b4f884c500a003fed9ccfedd98f682c5026daf4/json</span><br><span class="line">-rw-r--r-- 0/0        72491008 2021-03-11 08:21 e86c0242e63168af8ce7e8640b4f884c500a003fed9ccfedd98f682c5026daf4/layer.tar</span><br><span class="line">-rw-r--r-- 0/0             586 1970-01-01 08:00 manifest.json</span><br><span class="line">-rw-r--r-- 0/0              88 1970-01-01 08:00 repositories</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 传到没有网络的主机</span></span><br><span class="line">[root@localhost ~]# scp nginx.tar 192.168.81.58:/root</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 81.58操作导入tar包到本地镜像</span></span><br><span class="line">[root@localhost ~]# docker load -i  nginx.tar </span><br><span class="line"></span><br><span class="line">[root@localhost ~]# docker images </span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED        SIZE</span><br><span class="line">nginx        latest    018aec2b4f30   26 hours ago   133MB</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动nginx镜像映射IP</span></span><br><span class="line">[root@localhost ~]# docker run -d -p 8080:80 nginx</span><br><span class="line">38f999f57ffa1c1ab6799eab45323152564a943c00081a3f98838f5ef29fca21</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="3-3-安装kubeadm，kubelet和kubectl"><a href="#3-3-安装kubeadm，kubelet和kubectl" class="headerlink" title="3.3 安装kubeadm，kubelet和kubectl"></a>3.3 安装kubeadm，kubelet和kubectl</h3><p>由于版本更新频繁，这里指定版本号部署：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 所有节点操作</span></span><br><span class="line">yum install -y kubelet-1.20.0 kubeadm-1.20.0 kubectl-1.20.0</span><br><span class="line">systemctl enable kubelet</span><br></pre></td></tr></table></figure>

<h2 id="4-部署Kubernetes-Master"><a href="#4-部署Kubernetes-Master" class="headerlink" title="4. 部署Kubernetes Master"></a>4. 部署Kubernetes Master</h2><p><a href="https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file">https://kubernetes.io/zh/docs/reference/setup-tools/kubeadm/kubeadm-init/#config-file</a> </p>
<p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#initializing-your-control-plane-node</a> </p>
<p>在192.168.81.57（Master）执行。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubeadm init \</span><br><span class="line">  --apiserver-advertise-address=192.168.81.57 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version v1.20.0 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16 \</span><br><span class="line">  --ignore-preflight-errors=all</span><br></pre></td></tr></table></figure>

<ul>
<li>–apiserver-advertise-address 集群通告地址</li>
<li>–image-repository  由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定阿里云镜像仓库地址</li>
<li>–kubernetes-version K8s版本，与上面安装的一致</li>
<li>–service-cidr 集群内部虚拟网络，Pod统一访问入口</li>
<li>–pod-network-cidr Pod网络，，与下面部署的CNI网络组件yaml中保持一致</li>
</ul>
<p>或者使用配置文件引导：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi kubeadm.conf</span><br><span class="line">apiVersion: kubeadm.k8s.io/v1beta2</span><br><span class="line">kind: ClusterConfiguration</span><br><span class="line">kubernetesVersion: v1.20.0</span><br><span class="line">imageRepository: registry.aliyuncs.com/google_containers </span><br><span class="line">networking:</span><br><span class="line">  podSubnet: 10.244.0.0/16 </span><br><span class="line">  serviceSubnet: 10.96.0.0/12 </span><br><span class="line"></span><br><span class="line">kubeadm init --config kubeadm.conf --ignore-preflight-errors=all  </span><br></pre></td></tr></table></figure>



<p>拷贝kubectl使用的连接k8s认证文件到默认路径：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line"></span><br><span class="line">[root@k8s-master ~]<span class="comment"># ll .kube/config </span></span><br><span class="line">-rw------- 1 root root 5569 3月  12 11:58 .kube/config</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get nodes</span><br><span class="line">NAME               STATUS     ROLES            AGE   VERSION</span><br><span class="line">localhost.localdomain   NotReady   control-plane,master   20s   v1.20.0</span><br></pre></td></tr></table></figure>



<h2 id="5-加入Kubernetes-Node"><a href="#5-加入Kubernetes-Node" class="headerlink" title="5. 加入Kubernetes Node"></a>5. 加入Kubernetes Node</h2><p>在192.168.81.58/59（Node）执行。</p>
<p>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">kubeadm join 192.168.81.57:6443 --token tqxl1u.8vwoeza99jxzgoi0 \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:48321ed1651b239cee9dd3b482a24e9deee1e48c7ca3b34cfa429524538275ba </span><br></pre></td></tr></table></figure>

<p>默认token有效期为24小时，当过期之后，该token就不可用了。这时就需要重新创建token，可以直接使用命令快捷生成：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure>

<p><a href="https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/">https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-join/</a></p>
<h2 id="6-部署容器网络（CNI）"><a href="#6-部署容器网络（CNI）" class="headerlink" title="6. 部署容器网络（CNI）"></a>6. 部署容器网络（CNI）</h2><p><a href="https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network">https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/#pod-network</a> </p>
<p>注意：只需要部署下面其中一个，推荐Calico。</p>
<p>Calico是一个纯三层的数据中心网络方案，Calico支持广泛的平台，包括Kubernetes、OpenStack等。</p>
<p>Calico 在每一个计算节点利用 Linux Kernel 实现了一个高效的虚拟路由器（ vRouter） 来负责数据转发，而每个 vRouter 通过 BGP 协议负责把自己上运行的 workload 的路由信息向整个 Calico 网络内传播。</p>
<p>此外，Calico  项目还实现了 Kubernetes 网络策略，提供ACL功能。</p>
<p> <a href="https://docs.projectcalico.org/getting-started/kubernetes/quickstart">https://docs.projectcalico.org/getting-started/kubernetes/quickstart</a> </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://docs.projectcalico.org/manifests/calico.yaml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改yaml以下内容 IP地址段与上述init地址段保持一致</span></span><br><span class="line">[root@k8s-master ~]# vim calico.yaml</span><br><span class="line">            - name: CALICO_IPV4POOL_CIDR</span><br><span class="line">              value: &quot;10.244.0.0/16&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>下载完后还需要修改里面定义Pod网络（CALICO_IPV4POOL_CIDR），与前面kubeadm init指定的一样</p>
<p>修改完后应用清单：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl apply -f calico.yaml</span><br><span class="line">kubectl get pods -n kube-system</span><br></pre></td></tr></table></figure>

<h2 id="7-测试kubernetes集群"><a href="#7-测试kubernetes集群" class="headerlink" title="7. 测试kubernetes集群"></a>7. 测试kubernetes集群</h2><ul>
<li>验证Pod工作</li>
<li>验证Pod网络通信</li>
<li>验证DNS解析</li>
</ul>
<p>在Kubernetes集群中创建一个pod，验证是否正常运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl create deployment nginx --image=nginx</span><br><span class="line">kubectl expose deployment nginx --port=80 --type=NodePort</span><br><span class="line">[root@k8s-master ~]# kubectl expose deployment web --port=80 --target-port=80 --type=NodePort</span><br><span class="line"></span><br><span class="line">kubectl get pod,svc</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看 master 组件状态</span></span><br><span class="line">[root@k8s-master ~]# kubectl get cs</span><br><span class="line">Warning: v1 ComponentStatus is deprecated in v1.19+</span><br><span class="line">NAME                 STATUS      MESSAGE                                                                                       ERROR</span><br><span class="line">scheduler            Unhealthy   Get &quot;http://127.0.0.1:10251/healthz&quot;: dial tcp 127.0.0.1:10251: connect: connection refused   </span><br><span class="line">controller-manager   Unhealthy   Get &quot;http://127.0.0.1:10252/healthz&quot;: dial tcp 127.0.0.1:10252: connect: connection refused   </span><br><span class="line">etcd-0               Healthy     &#123;&quot;health&quot;:&quot;true&quot;&#125;  </span><br><span class="line"></span><br><span class="line">查看 master 组件不健康，估计版本小bug，不影响使用，如果要修复：</span><br><span class="line">打开两个文件：</span><br><span class="line">/etc/kubernetes/manifests/kube-controller-manager.yaml</span><br><span class="line">/etc/kubernetes/manifests/kube-scheduler.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash">注释掉 --port=0，开启本地非安全端口，然后systemctl restart kubelet</span></span><br></pre></td></tr></table></figure>

<p>访问地址：<a href="http://NodeIP:Port">http://NodeIP:Port</a>  </p>
<h2 id="8-部署-Dashboard"><a href="#8-部署-Dashboard" class="headerlink" title="8. 部署 Dashboard"></a>8. 部署 Dashboard</h2><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/kubernetes/dashboard/v2.0.3/aio/deploy/recommended.yaml</span><br></pre></td></tr></table></figure>

<p>默认Dashboard只能集群内部访问，修改Service为NodePort类型，暴露到外部：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi recommended.yaml</span><br><span class="line">...</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  name: kubernetes-dashboard</span><br><span class="line">  namespace: kubernetes-dashboard</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">    - port: 443</span><br><span class="line">      targetPort: 8443</span><br><span class="line">      nodePort: 30001</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kubernetes-dashboard</span><br><span class="line">  type: NodePort</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">kubectl apply -f recommended.yaml</span><br><span class="line">kubectl get pods -n kubernetes-dashboard</span><br><span class="line">NAME                                         READY   STATUS    RESTARTS   AGE</span><br><span class="line">dashboard-metrics-scraper-6b4884c9d5-gl8nr   1/1     Running   0          13m</span><br><span class="line">kubernetes-dashboard-7f99b75bf4-89cds        1/1     Running   0          13m$ vi recommended.yaml...kind: ServiceapiVersion: v1metadata:  labels:    k8s-app: kubernetes-dashboard  name: kubernetes-dashboard  namespace: kubernetes-dashboardspec:  ports:    - port: 443      targetPort: 8443      nodePort: 30001  selector:    k8s-app: kubernetes-dashboard  type: NodePort...$ kubectl apply -f recommended.yaml$ kubectl get pods -n kubernetes-dashboardNAME                                         READY   STATUS    RESTARTS   AGEdashboard-metrics-scraper-6b4884c9d5-gl8nr   1/1     Running   0          13mkubernetes-dashboard-7f99b75bf4-89cds        1/1     Running   0          13m</span><br></pre></td></tr></table></figure>

<p>访问地址：<a href="https://nodeip:30001/">https://NodeIP:30001</a></p>
<p>创建service account并绑定默认cluster-admin管理员集群角色：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建用户</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create serviceaccount dashboard-admin -n kube-system</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 用户授权</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl create clusterrolebinding dashboard-admin --clusterrole=cluster-admin --serviceaccount=kube-system:dashboard-admin</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取用户Token</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl describe secrets -n kube-system $(kubectl -n kube-system get secret | awk <span class="string">&#x27;/dashboard-admin/&#123;print $1&#125;&#x27;</span>)</span></span><br></pre></td></tr></table></figure>

<p>使用输出的token登录Dashboard。</p>
<h2 id="9-切换容器引擎为Containerd"><a href="#9-切换容器引擎为Containerd" class="headerlink" title="9. 切换容器引擎为Containerd"></a>9. 切换容器引擎为Containerd</h2><p><a href="https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#containerd">https://kubernetes.io/zh/docs/setup/production-environment/container-runtimes/#containerd</a></p>
<p>1、配置先决条件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt;EOF | sudo tee /etc/modules-load.d/containerd.conf</span><br><span class="line">overlay</span><br><span class="line">br_netfilter</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo modprobe overlay</span><br><span class="line">sudo modprobe br_netfilter</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置必需的 sysctl 参数，这些参数在重新启动后仍然存在。</span></span><br><span class="line">cat &lt;&lt;EOF | sudo tee /etc/sysctl.d/99-kubernetes-cri.conf</span><br><span class="line">net.bridge.bridge-nf-call-iptables  = 1</span><br><span class="line">net.ipv4.ip_forward                 = 1</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">EOF</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Apply sysctl params without reboot</span></span><br><span class="line">sudo sysctl --system</span><br></pre></td></tr></table></figure>

<p>2、安装containerd</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装 containerd</span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment"># 设置仓库</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 安装所需包</span></span></span><br><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加 docker 仓库</span></span><br><span class="line">yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 添加 contoinerd</span></span><br><span class="line">yum update -y &amp;&amp; sudo yum install -y containerd.io</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 配置 contoinerd</span></span><br><span class="line">mkdir -p /etc/containerd</span><br><span class="line">containerd config default | sudo tee /etc/containerd/config.toml</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 contoinerd</span></span><br><span class="line">systemctl restart containerd</span><br></pre></td></tr></table></figure>

<p>3、修改配置文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/containerd/config.toml</span><br><span class="line">   [plugins.&quot;io.containerd.grpc.v1.cri&quot;]</span><br><span class="line">      sandbox_image = &quot;registry.aliyuncs.com/google_containers/pause:3.2&quot;  </span><br><span class="line">         ...			# 改为国内地址</span><br><span class="line">         [plugins.&quot;io.containerd.grpc.v1.cri&quot;.containerd.runtimes.runc.options]</span><br><span class="line">             SystemdCgroup = true</span><br><span class="line">             ...		# Cgroup驱动</span><br><span class="line">        [plugins.&quot;io.containerd.grpc.v1.cri&quot;.registry.mirrors.&quot;docker.io&quot;]</span><br><span class="line">          endpoint = [&quot;https://b9pmyelo.mirror.aliyuncs.com&quot;]</span><br><span class="line">          # 改为阿里云加速器</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>4、配置kubelet使用containerd</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vi /etc/sysconfig/kubelet </span><br><span class="line">KUBELET_EXTRA_ARGS=--container-runtime=remote --container-runtime-endpoint=unix:///run/containerd/containerd.sock --cgroup-driver=systemd</span><br><span class="line"></span><br><span class="line">systemctl stop docker</span><br><span class="line">systemctl restart kubelet</span><br><span class="line">journalctl -u kubelet </span><br></pre></td></tr></table></figure>



<p>5、验证</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">kubectl get node -o wide</span><br><span class="line"></span><br><span class="line">k8s-node1  xxx  containerd://1.4.4</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>k8s</category>
      </categories>
      <tags>
        <tag>k8s</tag>
      </tags>
  </entry>
</search>
